{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/FriendName/FriendName.js","components/Dialogs/FriendName/FriendName-container.js","components/Dialogs/History/History.js","components/Dialogs/History/History-container.js","components/Dialogs/Dialogs.js","hoc/AuthRedirect.js"],"names":["module","exports","FriendName","props","DialogItem","path","id","className","s","avatar","alt","src","ava","nick","to","name","DialogsOutdata","history","DialogsData","map","ele","key","Math","random","img","conversation","FriendNameContainer","connect","state","maxLength","maxLengthCreator","HistoreFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","Chat","chat","text","History","DialogOutMessage","DialogsMessage","message","addMessage","HistoryContainer","dispatch","AddDialogActionCreator","DialogContainer","compose","auth","isAuth","Component","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,wB,8FC2BxJC,EApBE,SAACC,GAEd,IAAIC,EAAa,SAACD,GACd,IAAIE,EAAO,uBAAyBF,EAAMG,GAC1C,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAS,UAAKC,IAAEC,OAAP,WAAuB,yBAAKC,IAAI,MAAMC,IAAG,UAAKR,EAAMS,QAClE,yBAAKL,UAAS,UAAKC,IAAEK,KAAP,WAAqB,kBAAC,IAAD,CAASC,GAAIT,GAAOF,EAAMY,SAIrEC,EAAiBb,EAAMc,QAAQC,YAAYC,KAAI,SAACC,GAAD,OAAS,kBAAChB,EAAD,CAAYiB,IAAKC,KAAKC,SAAUX,IAAKQ,EAAII,IAAKT,KAAMK,EAAIL,UAEpH,OACI,yBAAKR,UAAS,gBAAWC,IAAEiB,eACtBT,ICbAU,EAAsBC,aANb,SAACC,GACnB,MAAO,CACHX,QAASW,EAAMX,WAIqC,GAAzBU,CAA6BzB,G,kDCH5D2B,EAAYC,YAAiB,KAW7BC,EAAmBC,YAAU,CAAEC,KAAM,QAAlBD,EATL,SAAC7B,GACf,OACI,0BAAM+B,SAAU/B,EAAMgC,cAClB,kBAACC,EAAA,EAAD,CAAOrB,KAAK,UAAUsB,UAAWC,IAAUC,SAAU,CAACV,KACtD,qCAMRW,EAAO,SAACrC,GACR,OAAO,yBAAKI,UAAS,cAASC,IAAEiC,OAAStC,EAAMuC,OAoBpCC,EAjBD,SAACxC,GACX,IAAIyC,EAAmBzC,EAAMc,QAAQ4B,eAAe1B,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAMC,IAAKD,EAAKsB,KAAMtB,EAAI0B,aAK3F,OACI,yBAAKvC,UAAU,SACX,yBAAKA,UAAU,OACX,yBAAKA,UAAS,UAAKC,IAAEkC,KAAP,YAAd,SAEHE,EACD,kBAACb,EAAD,CAAkBG,SATN,SAACQ,GACjBvC,EAAM4C,WAAWL,EAAKzB,cCVjB+B,EAAmBrB,aAZV,SAACC,GACnB,MAAO,CACHX,QAASW,EAAMX,YAGE,SAACgC,GACtB,MAAO,CACHF,WAAY,SAACL,GACTO,EAASC,YAAuBR,QAIZf,CAA6CgB,G,uDCjB7E,wCASA,IAiBIQ,EAAkBC,YAAQzB,aANR,SAACC,GACnB,MAAO,CACHyB,KAAMzB,EAAMyB,KAAKC,UAI8B,KCvB3B,SAACC,GAOzB,OAPuC,iLAG/B,OAAKC,KAAKrD,MAAMkD,KACT,kBAACE,EAAcC,KAAKrD,OADE,kBAAC,IAAD,CAAUW,GAAG,eAHX,GACP2C,IAAMF,aDsBpBH,EAjBR,WACV,OACI,yBAAK7C,UAAU,UACX,yBAAKA,UAAU,YACX,kBAACmB,EAAD,MACA,kBAACsB,EAAD","file":"static/js/3.35003ba0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__2oc5a\",\"conversation\":\"Dialogs_conversation__1PPiD\",\"nick\":\"Dialogs_nick__3jAsK\",\"avatar\":\"Dialogs_avatar__3-6-P\",\"text\":\"Dialogs_text__1LBv6\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nlet FriendName = (props) => {\r\n\r\n    let DialogItem = (props) => {\r\n        let path = '/Dialogs/FriendName/' + props.id\r\n        return (\r\n            <div className='row'>\r\n                <div className={`${s.avatar} col-6`}><img alt='img' src={`${props.ava}`} /></div>\r\n                <div className={`${s.nick} col-6`}><NavLink to={path}>{props.name}</NavLink></div>\r\n            </div>\r\n        )\r\n    }\r\n    let DialogsOutdata = props.history.DialogsData.map((ele) => <DialogItem key={Math.random()} ava={ele.img} name={ele.name} />)\r\n\r\n    return (\r\n        <div className={`col-3 ${s.conversation}`}>\r\n            {DialogsOutdata}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendName;","import { connect } from 'react-redux';\r\nimport FriendName from './FriendName'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        history: state.history\r\n    }\r\n}\r\n\r\nexport const FriendNameContainer = connect(mapStateToProps, {})(FriendName)\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/formTypes';\r\nimport { maxLengthCreator, required } from '../../../Utilits/Validators/Validators';\r\n\r\nlet maxLength = maxLengthCreator(100)\r\n\r\nlet HistoryForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='history' component={Textarea} validate={[maxLength]} />\r\n            <button ></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet HistoreFormRedux = reduxForm({ form: 'Chat' })(HistoryForm)\r\nlet Chat = (props) => {\r\n    return <div className={`row ${s.chat}`}>{props.text}</div>\r\n}\r\n\r\nlet History = (props) => {\r\n    let DialogOutMessage = props.history.DialogsMessage.map((ele) => <Chat key={ele} text={ele.message} />)\r\n\r\n    let addNewMessage = (text) => {\r\n        props.addMessage(text.history)\r\n    }\r\n    return (\r\n        <div className='col-6'>\r\n            <div className='row'>\r\n                <div className={`${s.text} col-12`}>Name</div>\r\n            </div>\r\n            {DialogOutMessage}\r\n            <HistoreFormRedux onSubmit={addNewMessage} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default History;","import { AddDialogActionCreator } from '../../../Redux/history-reducer'\r\nimport History from './History'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        history: state.history,\r\n    }\r\n}\r\nlet mapDispatchToStore = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(AddDialogActionCreator(text));\r\n        }\r\n    }\r\n}\r\nexport const HistoryContainer = connect(mapStateToProps, mapDispatchToStore)(History)","import React from 'react';\r\nimport { FriendNameContainer } from './FriendName/FriendName-container';\r\nimport { HistoryContainer } from './History/History-container'\r\nimport { connect } from 'react-redux';\r\nimport { AuthRedirect } from '../../hoc/AuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet Dialogs = () => {\r\n    return (\r\n        <div className='col-9 '>\r\n            <div className='row ml-3'>\r\n                <FriendNameContainer />\r\n                <HistoryContainer />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet DialogContainer = compose(connect(mapStateToProps, {}), AuthRedirect)(Dialogs)\r\n\r\nexport { DialogContainer as default }\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent\r\n}\r\n"],"sourceRoot":""}